LINE_COMMENT
BLOCK_COMMENT
LINE_COMMENT
COLLECTION: col Student {
IDENTIFIER: _name%string
SEPARATOR: ,
IDENTIFIER: _age%int
SEPARATOR: ,
ARRAY_IDENTIFIER: _grades%float[]
SEPARATOR: }
SEMICOLON
LINE_COMMENT
CONSTANT: __PI%float
OPERATOR: :
NUMBER: 3.14159
SEMICOLON
CONSTANT: __MAX_STUDENTS%int
OPERATOR: :
NUMBER: 100
SEMICOLON
LINE_COMMENT
FUNCTION: shap calculateAverage
SEPARATOR: (
ARRAY_IDENTIFIER: _grades%float[]
SEPARATOR: )
OPERATOR: >
KEYWORD: float
SEPARATOR: {
IDENTIFIER: _sum%float
OPERATOR: :
NUMBER: 0.0
SEMICOLON
IDENTIFIER: _count%int
OPERATOR: :
NUMBER: 0
SEMICOLON
LOOP_FOR: loop for
SEPARATOR: [
NUMBER: 0
RANGE_OPERATOR
NUMBER: 2
RANGE_OPERATOR
NUMBER: 1
SEPARATOR: ]
SEPARATOR: {
IDENTIFIER: sum
OPERATOR: :
IDENTIFIER: sum
OPERATOR: +
IDENTIFIER: grades
SEPARATOR: [
IDENTIFIER: count
SEPARATOR: ]
SEMICOLON
IDENTIFIER: count
OPERATOR: :
IDENTIFIER: count
OPERATOR: +
NUMBER: 1
SEMICOLON
SEPARATOR: }
RETURN
IDENTIFIER: sum
OPERATOR: /
IDENTIFIER: count
SEMICOLON
SEPARATOR: }
LINE_COMMENT
FUNCTION: shap getGradeLetter
SEPARATOR: (
IDENTIFIER: _score%float
SEPARATOR: )
OPERATOR: >
KEYWORD: string
SEPARATOR: {
CASE
IDENTIFIER: score
SEPARATOR: ]
SEPARATOR: {
SEPARATOR: [
NUMBER: 90.0
SEPARATOR: ]
OPERATOR: :
RETURN
STRING_LITERAL: "A"
SEMICOLON
SEPARATOR: [
NUMBER: 80.0
SEPARATOR: ]
OPERATOR: :
RETURN
STRING_LITERAL: "B"
SEMICOLON
SEPARATOR: [
NUMBER: 70.0
SEPARATOR: ]
OPERATOR: :
RETURN
STRING_LITERAL: "C"
SEMICOLON
SEPARATOR: [
NUMBER: 60.0
SEPARATOR: ]
OPERATOR: :
RETURN
STRING_LITERAL: "D"
SEMICOLON
SEPARATOR: [
SEPARATOR: ]
OPERATOR: :
RETURN
STRING_LITERAL: "F"
SEMICOLON
LINE_COMMENT
SEPARATOR: }
SEPARATOR: }
LINE_COMMENT
FUNCTION: shap main
SEPARATOR: (
SEPARATOR: )
OPERATOR: >
KEYWORD: int
SEPARATOR: {
LINE_COMMENT
IDENTIFIER: _student%Student
OPERATOR: :
SEPARATOR: {
IDENTIFIER: name
OPERATOR: :
STRING_LITERAL: "John Doe"
SEPARATOR: ,
IDENTIFIER: age
OPERATOR: :
NUMBER: 20
SEPARATOR: ,
IDENTIFIER: grades
OPERATOR: :
SEPARATOR: [
NUMBER: 85.5
SEPARATOR: ,
NUMBER: 90.0
SEPARATOR: ,
NUMBER: 88.5
SEPARATOR: ]
SEPARATOR: }
SEMICOLON
IDENTIFIER: _average%float
OPERATOR: :
NUMBER: 0.0
SEMICOLON
IDENTIFIER: _grade%string
OPERATOR: :
STRING_LITERAL: ""
SEMICOLON
LINE_COMMENT
IDENTIFIER: average
OPERATOR: :
IDENTIFIER: calculateAverage
SEPARATOR: (
IDENTIFIER: student
MEMBER_ACCESS: .grades
SEPARATOR: )
SEMICOLON
LINE_COMMENT
IDENTIFIER: grade
OPERATOR: :
IDENTIFIER: getGradeLetter
SEPARATOR: (
IDENTIFIER: average
SEPARATOR: )
SEMICOLON
LINE_COMMENT
IF
IDENTIFIER: average
OPERATOR: >=
NUMBER: 90.0
SEPARATOR: ]
SEPARATOR: {
LINE_COMMENT
IDENTIFIER: _message%string
OPERATOR: :
STRING_LITERAL: "Excellent performance!"
SEMICOLON
IDENTIFIER: print
SEPARATOR: (
IDENTIFIER: message
SEPARATOR: )
SEMICOLON
SEPARATOR: }
ELIF
IDENTIFIER: average
OPERATOR: >=
NUMBER: 80.0
SEPARATOR: ]
SEPARATOR: {
IDENTIFIER: _message%string
OPERATOR: :
STRING_LITERAL: "Good job!"
SEMICOLON
IDENTIFIER: print
SEPARATOR: (
IDENTIFIER: message
SEPARATOR: )
SEMICOLON
SEPARATOR: }
ELSE
SEPARATOR: {
IDENTIFIER: _message%string
OPERATOR: :
STRING_LITERAL: "Keep working hard!"
SEMICOLON
IDENTIFIER: print
SEPARATOR: (
IDENTIFIER: message
SEPARATOR: )
SEMICOLON
SEPARATOR: }
LINE_COMMENT
ARRAY_IDENTIFIER: _scores%float[]
OPERATOR: :
SEPARATOR: [
NUMBER: 78.5
SEPARATOR: ,
NUMBER: 82.0
SEPARATOR: ,
NUMBER: 91.5
SEPARATOR: ,
NUMBER: 88.0
SEPARATOR: ,
NUMBER: 95.0
SEPARATOR: ]
SEMICOLON
IDENTIFIER: _sum%float
OPERATOR: :
NUMBER: 0.0
SEMICOLON
LINE_COMMENT
IDENTIFIER: _i%int
OPERATOR: :
NUMBER: 0
SEMICOLON
LOOP_TILL: loop till
SEPARATOR: [
IDENTIFIER: i
OPERATOR: <
NUMBER: 5
SEPARATOR: ]
SEPARATOR: {
IDENTIFIER: sum
OPERATOR: :
IDENTIFIER: sum
OPERATOR: +
IDENTIFIER: scores
SEPARATOR: [
IDENTIFIER: i
SEPARATOR: ]
SEMICOLON
IF
IDENTIFIER: scores
SEPARATOR: [
IDENTIFIER: i
SEPARATOR: ]
OPERATOR: >
NUMBER: 90.0
SEPARATOR: ]
SEPARATOR: {
CONTINUE
SEMICOLON
LINE_COMMENT
SEPARATOR: }
IDENTIFIER: i
OPERATOR: :
IDENTIFIER: i
OPERATOR: +
NUMBER: 1
SEMICOLON
SEPARATOR: }
LINE_COMMENT
LOOP_FOR: loop for
SEPARATOR: [
NUMBER: 0
RANGE_OPERATOR
NUMBER: 4
RANGE_OPERATOR
NUMBER: 1
SEPARATOR: ]
SEPARATOR: {
IF
IDENTIFIER: scores
SEPARATOR: [
IDENTIFIER: i
SEPARATOR: ]
OPERATOR: <
NUMBER: 80.0
SEPARATOR: ]
SEPARATOR: {
BREAK
SEMICOLON
LINE_COMMENT
SEPARATOR: }
SEPARATOR: }
LINE_COMMENT
IDENTIFIER: _flags%int
OPERATOR: :
NUMBER: 5
SEMICOLON
IDENTIFIER: _mask%int
OPERATOR: :
NUMBER: 3
SEMICOLON
IDENTIFIER: _result%int
OPERATOR: :
IDENTIFIER: flags
OPERATOR: &
IDENTIFIER: mask
SEMICOLON
LINE_COMMENT
IDENTIFIER: _circle_area%float
OPERATOR: :
IDENTIFIER: PI
OPERATOR: *
IDENTIFIER: radius
OPERATOR: ^
NUMBER: 2
SEMICOLON
IDENTIFIER: _remainder%int
OPERATOR: :
NUMBER: 17
OPERATOR: %
NUMBER: 5
SEMICOLON
RETURN
NUMBER: 0
SEMICOLON
SEPARATOR: }

Token Counts:
-------------
Keywords: 25
Identifiers: 21
Constants: 2
Operators: 53
Arrays: 3
Loops: 3
Functions: 3
Conditions: 6
Collections: 1
Semicolons: 37
Line Comments: 19
Block Comments: 1
